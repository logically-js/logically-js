!function(t){var r={};function e(n){if(r[n])return r[n].exports;var o=r[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,e),o.l=!0,o.exports}e.m=t,e.c=r,e.d=function(t,r,n){e.o(t,r)||Object.defineProperty(t,r,{enumerable:!0,get:n})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,r){if(1&r&&(t=e(t)),8&r)return t;if(4&r&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(e.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&r&&"string"!=typeof t)for(var o in t)e.d(n,o,function(r){return t[r]}.bind(null,o));return n},e.n=function(t){var r=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(r,"a",r),r},e.o=function(t,r){return Object.prototype.hasOwnProperty.call(t,r)},e.p="",e(e.s=0)}([function(t,r,e){"use strict";const n=e(1);t.exports={Formula:n}},function(t,r){const e={atomicVariable:/^([a-z])$/,binaryOperator:/^(V|&|->|<->)/,operator:/^(~|V|&|->|<->)/,unaryOperator:/^(~)/},n={"~":t=>!1===t,"&":(t,r)=>!0===t&&!0===r,V:(t,r)=>!0===t||!0===r,"->":(t,r)=>!1===t||!0===r,"<->":(t,r)=>t===r&&"boolean"==typeof t};t.exports=class{constructor(t){this.operator=null,this.operands=[],this.formulaString=t}isAtomicString(t){return e.atomicVariable.test(t)}trimParens(t){const r=t.length;if("("!==t[0]||")"!==t[r-1])return t;let e=1;for(let n=1;n<r-1;n++){const r=t[n];if(e+="("===r,0==(e-=")"===r))return t}return this.trimParens(t.slice(1,r-1))}removeWhiteSpace(t){return t&&t.replace(/\s/g,"")}findMainBinaryOperatorIndex(t){const r=t.length;let n=0;for(let o=0;o<r;o++){const r=t.slice(o);if(0===n&&r.match(e.binaryOperator))return o;n+="("===r[0],n-=")"===r[0]}return-1}parseString(t){if(t=this.removeWhiteSpace(t),t=this.trimParens(t),this.isAtomicString(t))return{operator:null,operands:[t]};const r=this.findMainBinaryOperatorIndex(t);if(r>-1){const n=t.slice(r).match(e.binaryOperator)[0];return{operator:n,operands:[t.slice(0,r),t.slice(r+n.length)]}}return e.unaryOperator.test(t)?{operator:"~",operands:[t.slice(1)]}:null}isWFFString(t){if(t=this.removeWhiteSpace(t),1===(t=this.trimParens(t)).length)return this.isAtomicString(t);const r=this.parseString(t);return null!==r&&!!e.operator.test(r.operator)&&r.operands.every(t=>this.isWFFString(t))}evaluateFormulaString(t,r){if(console.log("evaluateFormulaString",t,r),!this.isWFFString(t))return null;if(t=this.removeWhiteSpace(t),t=this.trimParens(t),this.isAtomicString(t))return r[t];const e=this.parseString(t),o=e.operands.map(t=>this.isAtomicString(t)?r[t]:this.evaluateFormulaString(t,r));return n[e.operator](...o)}generateTruthTableHeaders(t){const r=new Set;return(t=>{r.add(t),this.isAtomicString(t)||this.parseString(t).operands.forEach(t=>{if(this.isAtomicString(t))r.add(t);else{const e=this.generateTruthTableHeaders(t);for(const t of e)r.add(t)}})})(t),Array.from(r).sort((t,r)=>t.length<r.length?-1:t.length>r.length?1:t<r?-1:r<t?1:0)}getAtomicVariables(t){const r=new Set;for(const e of t)/[a-z]/.test(e)&&r.add(e);return Array.from(r).sort()}generateTruthTable(t,r=!1){const e=this.generateTruthTableHeaders(t),n=this.getAtomicVariables(t),o=Math.pow(2,n.length),i=new Array(o).fill(0).map(t=>new Array(e.length).fill(null));let a=0;for(;a<n.length;a++)for(let t=0;t<o;t++){const r=o/Math.pow(2,a);i[t][a]=t%r<r/2}if(r)return i;for(;a<i[0].length;a++)for(let t=0;t<i.length;t++){const r={};i[t].slice(0,n.length).forEach((t,e)=>{r[n[e]]=t}),i[t][a]=this.evaluateFormulaString(e[a],r)}return i}}}]);